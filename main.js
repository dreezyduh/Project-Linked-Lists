(()=>{class e{constructor(e=null,n=null){this.value=e,this.nextNode=n}}const n=new class{constructor(){this.nodeHead=null}prepend(n){let o=null;null!==this.nodeHead&&(o=this.nodeHead),this.nodeHead=new e(n),this.nodeHead.nextNode=o}append(n){if(null===this.nodeHead)this.prepend(n);else{let o=this.nodeHead;for(;null!==o.nextNode;)o=o.nextNode;o.nextNode=new e(n)}}size(){let e=0,n=this.nodeHead;for(;null!==n;)n=n.nextNode,e+=1;return e}head(){return console.log(this.nodeHead),this.nodeHead}tail(){let e=this.nodeHead;for(;null!=e.nextNode;)e=e.nextNode;return console.log(e),e}at(e){if(e>this.size())return console.log("Index bigger than actual size");let n=this.nodeHead;for(let o=0;o<e;o++)n=n.nextNode;return console.log(n),n}pop(){let e=this.size();if(0===e)return console.log("Can't use pop() on an empty list");let n=1,o=this.nodeHead;for(;n<e;){if(n===e-1)return void(o.nextNode=null);n++,o=o.nextNode}}contains(e){let n=this.nodeHead;for(;null!==n;){if(n.value===e)return!0;if(null===n.nextNode)return!1;n=n.nextNode}}find(e){let n=this.size(),o=this.nodeHead;for(let t=0;t<n;t++){if(t===n)return null;if(o.value===e)return`Value (${e}) found at index ${t}`;o=o.nextNode}}toString(){let e=this.nodeHead,n="";for(;null!==e;)n+=`(${e.value}) -> `,e=e.nextNode;return n+="null",n}insertAt(n,o){let t=this.nodeHead,l=null;if(o>this.size())return console.log("Index is bigger than list size");let d=0;if(d!==o){for(;null!==t&&d<o;)l=t,t=t.nextNode,d++;null!==t&&(l.nextNode=new e(n,t))}else this.prepend(n)}removeAt(e){let n=this.nodeHead,o=null;if(e>this.size())return console.log("Index is bigger than list size");let t=0;if(t!==e){for(;null!==n&&t<e;)o=n,n=n.nextNode,t++;if(null===n)return console.log("Cannot delete null");o.nextNode=n.nextNode}else this.nodeHead=this.nodeHead.nextNode}};n.append("capsuna"),n.append(7),n.append("Tom Nook"),n.append(2),n.append("astronaut"),console.log(n.toString()),console.log(n.size()),n.head(),n.tail(),n.at(6),n.pop(),n.tail(),console.log(n.contains("capsuna")),console.log(n.find("Tom Nook")),console.log(n.toString()),n.removeAt(3),console.log(n.toString()),n.insertAt("sugus",1),console.log(n.toString())})();